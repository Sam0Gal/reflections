What happens when you initialize a repository? Why do you need to do it?

	This makes a git directory to save commits and track files and show history.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area enables me to choose files that I want to track them in a repository.

How can you use the staging area to make sure you have one commit per logical
change?

	I use it to add file or files that has one logical change instead of committing all the changes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Branches will when I try a new experimental feature or when I change the language of the program etc.

How do the diagrams help you visualize the branch structure?

	It makes it easy to see everything easily, and navigate commits history more easily.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	Adding all changes in a branch to the checkedout branch and committing on the tip of the checkedout branch (and the merged branch).

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

	Pros: will save a lot of time and effort and the code will be arranged but cons: Sometimes there may be conflicts and we should resolve it and merge manually.
